<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.git.iboke.mapper.UserInfoMapper" >
  <resultMap id="BaseResultMap" type="com.git.iboke.model.UserInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="login_id" property="loginId" jdbcType="INTEGER" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="BIT" />
    <result column="birthday" property="birthday" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="birth_place" property="birthPlace" jdbcType="VARCHAR" />
    <result column="live_place" property="livePlace" jdbcType="VARCHAR" />
    <result column="regist_time" property="registTime" jdbcType="VARCHAR" />
    <result column="last_login_time" property="lastLoginTime" jdbcType="VARCHAR" />
    <result column="introduce" property="introduce" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, login_id, real_name, sex, birthday, email, birth_place, live_place, regist_time, 
    last_login_time, introduce
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from userinfo
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from userinfo
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.git.iboke.model.UserInfo" >
    insert into userinfo (id, login_id, real_name, 
      sex, birthday, email, birth_place, 
      live_place, regist_time, last_login_time, 
      introduce)
    values (#{id,jdbcType=INTEGER}, #{loginId,jdbcType=INTEGER}, #{realName,jdbcType=VARCHAR}, 
      #{sex,jdbcType=BIT}, #{birthday,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{birthPlace,jdbcType=VARCHAR}, 
      #{livePlace,jdbcType=VARCHAR}, #{registTime,jdbcType=VARCHAR}, #{lastLoginTime,jdbcType=VARCHAR}, 
      #{introduce,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.git.iboke.model.UserInfo" >
    insert into userinfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="loginId != null" >
        login_id,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="birthPlace != null" >
        birth_place,
      </if>
      <if test="livePlace != null" >
        live_place,
      </if>
      <if test="registTime != null" >
        regist_time,
      </if>
      <if test="lastLoginTime != null" >
        last_login_time,
      </if>
      <if test="introduce != null" >
        introduce,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="loginId != null" >
        #{loginId,jdbcType=INTEGER},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=BIT},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="birthPlace != null" >
        #{birthPlace,jdbcType=VARCHAR},
      </if>
      <if test="livePlace != null" >
        #{livePlace,jdbcType=VARCHAR},
      </if>
      <if test="registTime != null" >
        #{registTime,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null" >
        #{lastLoginTime,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null" >
        #{introduce,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.git.iboke.model.UserInfo" >
    update userinfo
    <set >
      <if test="loginId != null" >
        login_id = #{loginId,jdbcType=INTEGER},
      </if>
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=BIT},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="birthPlace != null" >
        birth_place = #{birthPlace,jdbcType=VARCHAR},
      </if>
      <if test="livePlace != null" >
        live_place = #{livePlace,jdbcType=VARCHAR},
      </if>
      <if test="registTime != null" >
        regist_time = #{registTime,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null" >
        last_login_time = #{lastLoginTime,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null" >
        introduce = #{introduce,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.git.iboke.model.UserInfo" >
    update userinfo
    set login_id = #{loginId,jdbcType=INTEGER},
      real_name = #{realName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=BIT},
      birthday = #{birthday,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      birth_place = #{birthPlace,jdbcType=VARCHAR},
      live_place = #{livePlace,jdbcType=VARCHAR},
      regist_time = #{registTime,jdbcType=VARCHAR},
      last_login_time = #{lastLoginTime,jdbcType=VARCHAR},
      introduce = #{introduce,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>